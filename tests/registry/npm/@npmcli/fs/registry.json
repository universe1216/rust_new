{"name":"@npmcli/fs","description":"filesystem utilities for the npm cli","dist-tags":{"latest":"3.1.1"},"versions":{"3.1.1":{"name":"@npmcli/fs","version":"3.1.1","author":{"name":"GitHub Inc."},"license":"ISC","_id":"@npmcli/fs@3.1.1","bugs":{"url":"https://github.com/npm/fs/issues"},"tap":{"nyc-arg":["--exclude","tap-snapshots/**"]},"dist":{"shasum":"59cdaa5adca95d135fc00f2bb53f5771575ce726","tarball":"http://localhost:4260/@npmcli/fs/fs-3.1.1.tgz","fileCount":13,"integrity":"sha512-q9CRWjpHCMIh5sVyefoD1cA7PkvILqCZsnSOEUUivORLjxCO/Irmue2DprETiNgEqktDBZaM1Bi+jrarx1XdCg==","signatures":[{"sig":"MEQCIGgGtUq4+uzs0XScvlFRq+OwngJ/rv7arf79l9nlbNG8AiBdjGr9Hq1zFtsBVRBKL45mZOkBR8qHofq5eZRE9wke5Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":26547},"main":"lib/index.js","engines":{"node":"^14.17.0 || ^16.13.0 || >=18.0.0"},"gitHead":"6f51359dd52cd06bd4cb2c36202163f330c528c4","scripts":{"lint":"eslint \"**/*.{js,cjs,ts,mjs,jsx,tsx}\"","snap":"tap","test":"tap","lintfix":"npm run lint -- --fix","postlint":"template-oss-check","postsnap":"npm run lintfix --","posttest":"npm run lint","npmclilint":"npmcli-lint","template-oss-apply":"template-oss-apply --force"},"repository":{"url":"git+https://github.com/npm/fs.git","type":"git"},"_npmVersion":"10.7.0","description":"filesystem utilities for the npm cli","directories":{},"templateOSS":{"version":"4.22.0","//@npmcli/template-oss":"This file is partially managed by @npmcli/template-oss. Edits may be overwritten."},"_nodeVersion":"20.7.0","dependencies":{"semver":"^7.3.5"},"_hasShrinkwrap":false,"devDependencies":{"tap":"^16.0.1","@npmcli/template-oss":"4.22.0","@npmcli/eslint-config":"^4.0.0"}}},"author":{"name":"GitHub Inc."},"repository":{"url":"git+https://github.com/npm/fs.git","type":"git"},"license":"ISC","homepage":"https://github.com/npm/fs#readme","bugs":{"url":"https://github.com/npm/fs/issues"},"readme":"# @npmcli/fs\n\npolyfills, and extensions, of the core `fs` module.\n\n## Features\n\n- `fs.cp` polyfill for node < 16.7.0\n- `fs.withTempDir` added\n- `fs.readdirScoped` added\n- `fs.moveFile` added\n\n## `fs.withTempDir(root, fn, options) -> Promise`\n\n### Parameters\n\n- `root`: the directory in which to create the temporary directory\n- `fn`: a function that will be called with the path to the temporary directory\n- `options`\n  - `tmpPrefix`: a prefix to be used in the generated directory name\n\n### Usage\n\nThe `withTempDir` function creates a temporary directory, runs the provided\nfunction (`fn`), then removes the temporary directory and resolves or rejects\nbased on the result of `fn`.\n\n```js\nconst fs = require('@npmcli/fs')\nconst os = require('os')\n\n// this function will be called with the full path to the temporary directory\n// it is called with `await` behind the scenes, so can be async if desired.\nconst myFunction = async (tempPath) => {\n  return 'done!'\n}\n\nconst main = async () => {\n  const result = await fs.withTempDir(os.tmpdir(), myFunction)\n  // result === 'done!'\n}\n\nmain()\n```\n\n## `fs.readdirScoped(root) -> Promise`\n\n### Parameters\n\n- `root`: the directory to read\n\n### Usage\n\nLike `fs.readdir` but handling `@org/module` dirs as if they were\na single entry.\n\n```javascript\nconst { readdirScoped } = require('@npmcli/fs')\nconst entries = await readdirScoped('node_modules')\n// entries will be something like: ['a', '@org/foo', '@org/bar']\n```\n\n## `fs.moveFile(source, dest, options) -> Promise`\n\nA fork of [move-file](https://github.com/sindresorhus/move-file) with\nsupport for Common JS.\n\n### Highlights\n\n- Promise API.\n- Supports moving a file across partitions and devices.\n- Optionally prevent overwriting an existing file.\n- Creates non-existent destination directories for you.\n- Automatically recurses when source is a directory.\n\n### Parameters\n\n- `source`: File, or directory, you want to move.\n- `dest`: Where you want the file or directory moved.\n- `options`\n  - `overwrite` (`boolean`, default: `true`): Overwrite existing destination file(s).\n\n### Usage\n\nThe built-in\n[`fs.rename()`](https://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback)\nis just a JavaScript wrapper for the C `rename(2)` function, which doesn't\nsupport moving files across partitions or devices. This module is what you\nwould have expected `fs.rename()` to be.\n\n```js\nconst { moveFile } = require('@npmcli/fs');\n\n(async () => {\n\tawait moveFile('source/unicorn.png', 'destination/unicorn.png');\n\tconsole.log('The file has been moved');\n})();\n```\n","readmeFilename":"README.md"}

{"name":"cowsay","description":"cowsay is a configurable talking cow","dist-tags":{"latest":"1.5.0"},"versions":{"1.5.0":{"name":"cowsay","version":"1.5.0","description":"cowsay is a configurable talking cow","author":{"name":"Fabio Crisci","email":"piuccio@gmail.com","url":"https://github.com/piuccio/"},"license":"MIT","main":"./index","types":"./index.d.ts","module":"./build/cowsay.es.js","browser":"./build/cowsay.umd.js","bin":{"cowsay":"cli.js","cowthink":"cli.js"},"repository":{"type":"git","url":"git+https://github.com/piuccio/cowsay.git"},"scripts":{"prepare":"rollup -c","test":"tape test/**/*.js | tap-dot"},"dependencies":{"get-stdin":"8.0.0","string-width":"~2.1.1","strip-final-newline":"2.0.0","yargs":"15.4.1"},"devDependencies":{"@rollup/plugin-commonjs":"15.0.0","@rollup/plugin-node-resolve":"9.0.0","execa":"5.0.0","rollup":"2.26.5","rollup-plugin-string":"3.0.0","tap-dot":"2.0.0","tape":"5.0.1"},"preferGlobal":true,"engines":{"node":">= 4"},"gitHead":"692127f8c29f071cc081a5bf41cb51c4b012ef18","bugs":{"url":"https://github.com/piuccio/cowsay/issues"},"_id":"cowsay@1.5.0","_nodeVersion":"12.18.3","_npmVersion":"6.14.6","dist":{"integrity":"sha512-8Ipzr54Z8zROr/62C8f0PdhQcDusS05gKTS87xxdji8VbWefWly0k8BwGK7+VqamOrkv3eGsCkPtvlHzrhWsCA==","shasum":"4a2a453b8b59383c7d7a50e44d765c5de0bf615f","tarball":"http://localhost:4260/cowsay/cowsay-1.5.0.tgz","fileCount":202,"unpackedSize":277259,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgsHV0CRA9TVsSAnZWagAADjsP/A4MpqF8x0gI5BfOQ3vp\nHQg/fnDVsYd+vSLXeEDGn44np72O8w3SLdNuS9KRpj2MrsCP9oA5eqVtyvIu\nXoiK5ygVV/0Rq+JaY0V2FMn8VAsTDxTUt7KunN2eSRAzNSaPVh3HOndSO5nh\n4W2j9MvMXss+iePZKhmAW6wgcnj84dW6kYsjRmlO9M4miBMcL8hoWEyeWobm\nkEY7EDSA3zDwGanWPDp7RGFZsjBzoQwIhmvsewUjrkW1xbNSnKg/nKltcFLO\nRgC7Aa+zFevFz9+SUPLtWyrJ1ZcuHZ8fT3S5hL9/lWXweSydOqvM6cnvIi16\ned5CLWq4/rFylTvr18KXCC5lm+IQjRa9SioU5lBp/nETqrER56N5clS9rqX9\n7aMsP6JgsXMGOPZQ0Zkg1lF1cDvSrYI+ZfKuiAhw9AKsZK/BFmLF7LG2dWAT\nxWqyG2ZQtrvnXFgU7BWEvh9nDJxabRffUPzwBDHN7eJgFlFZO2F5ofcBu21t\ni1vUSbL5Qd7Ip8jP2ScJiNE2siH5CRutdjVjAOw13WWyiPZpF4OsCKqgkVD/\nm2jMsqeUU0DjN/SgOTvAZiyDyW7p+E7BGYno/uLEQQe97C2f4BG6FxYNLZ7P\n+OK0oHX6ssEu7MAHEjhFY6aIIJyR3YLQ3VjBj44nHoN07cLcEmRnhEWBcMwP\nX5TS\r\n=SE4V\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDF7XRc3OJHKWff5596Pr9rOiFUzXMs0eVNt/lfWu5lYgIgChPEMnRXMWCHvcB/8qupW63YJ4QGz1ds40ipKpfCA0I="}]},"directories":{},"_hasShrinkwrap":false}},"readme":"# cowsay\n\n````\n __________________\n< srsly dude, why? >\n ------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n````\n\ncowsay is a configurable talking cow, originally written in Perl by [Tony Monroe](https://github.com/tnalpgge/rank-amateur-cowsay)\n\nThis project is a translation in JavaScript of the original program and an attempt to bring the same silliness to node.js.\n\n## Install\n\n    npm install -g cowsay\n\n## Usage\n\n    cowsay JavaScript FTW!\n\nor\n\n    cowthink node.js is cool\n\nIt acts in the same way as the original cowsay, so consult `cowsay(1)` or run `cowsay -h`\n\n````\n ________\n< indeed >\n --------\n    \\\n     \\\n                                   .::!!!!!!!:.\n  .!!!!!:.                        .:!!!!!!!!!!!!\n  ~~~~!!!!!!.                 .:!!!!!!!!!UWWW$$$\n      :$$NWX!!:           .:!!!!!!XUWW$$$$$$$$$P\n      $$$$$##WX!:      .<!!!!UW$$$$\"  $$$$$$$$#\n      $$$$$  $$$UX   :!!UW$$$$$$$$$   4$$$$$*\n      ^$$$B  $$$$\\     $$$$$$$$$$$$   d$$R\"\n        \"*$bd$$$$      '*$$$$$$$$$$$o+#\"\n             \"\"\"\"          \"\"\"\"\"\"\"\n````\n\n## Usage as a module\n\ncowsay can be used as any other npm dependency\n```js\nvar cowsay = require(\"cowsay\");\n\nconsole.log(cowsay.say({\n    text : \"I'm a moooodule\",\n    e : \"oO\",\n    T : \"U \"\n}));\n\n// or cowsay.think()\n```\n````\n _________________\n( I'm a moooodule )\n -----------------\n        o   ^__^\n         o  (oO)\\_______\n            (__)\\       )\\/\\\n             U  ||----w |\n                ||     ||\n````\n\ngetting a list of cow names:\n```js\nfunction get_cows(error, cow_names) {\n    if (error) {\n        console.log(error)\n    }\n    else if (cow_names) {\n        console.log(`Number of cows available: ${cow_names.length}`);\n    }\n}\n\ncowsay.list(get_cows);\n```\n\n#### Typescript examples:\n```ts\nimport * as cowsay from \"cowsay\"\n\nlet output: string = cowsay.say({ text: 'Hello from typescript!' });\n\nconsole.log(output);\n```\n\ngetting a list of cow names:\n```ts\nfunction get_cows(error: NodeJS.ErrnoException, cow_names: Array<string>): void {\n    if (error) {\n        console.log(`Error getting cow names: ${error.message}`)\n    }\n    else if (cow_names) {\n        console.log(`Number of cows available: ${cow_names.length}`);\n    }\n}\n\ncowsay.list(get_cows);\n```\n\nimporting the `IOptions` interface directly:\n```ts\nimport { IOptions } from \"cowsay\" // optional\n\nlet opts: IOptions = {\n    text: \"Hello from TypeScript!\",\n    e: '^^',\n    r: true,\n};\n\nconsole.log(cowsay.say(opts));\n```\n\n\n## Pipe from standard input\n\n    echo please repeat | cowsay\n\n## Usage in the browser\n\ncowsay works in your browser too with rollup / webpack / browserify / you name it.\n\n```js\nimport { say } from 'cowsay';\n\nconsole.log(say({ text: 'grazing in the browser' }));\n```\n\nYou can customize the cow by importing the relevant one\n\n```js\nimport { think, SQUIRREL } from 'cowsay';\n\nconsole.log(think({\n  text: 'grazing in the browser',\n  cow: SQUIRREL,\n  eyes: 'pp',\n  tongue: ';;',\n}));\n```\n\nAll cows are included in the bundle, but you can use rollup / webpack tree-shake feature to reduce the final bundle size.\n\n### Browser options\n\n```js\nsay({\n  text: 'hello',\n  cow: '', // Template for a cow, get inspiration from `./cows`\n  eyes: 'oo', // Select the appearance of the cow's eyes, equivalent to cowsay -e\n  tongue: 'L|', // The tongue is configurable similarly to the eyes through -T and tongue_string, equivalent to cowsay -T\n  wrap: false, // If it is specified, the given message will not be word-wrapped. equivalent to cowsay -n\n  wrapLength: 40, // Specifies roughly where the message should be wrapped. equivalent to cowsay -W\n  mode: 'b', // One of \t\"b\", \"d\", \"g\", \"p\", \"s\", \"t\", \"w\", \"y\"\n});\n```\n","author":{"name":"Fabio Crisci","email":"piuccio@gmail.com","url":"https://github.com/piuccio/"},"repository":{"type":"git","url":"git+https://github.com/piuccio/cowsay.git"},"homepage":"https://github.com/piuccio/cowsay","bugs":{"url":"https://github.com/piuccio/cowsay/issues"},"readmeFilename":"README.md","license":"MIT"}

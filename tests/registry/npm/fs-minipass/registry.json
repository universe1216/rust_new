{"name":"fs-minipass","description":"fs read and write streams based on minipass","dist-tags":{"latest":"3.0.3"},"versions":{"2.1.0":{"name":"fs-minipass","version":"2.1.0","main":"index.js","scripts":{"test":"tap","preversion":"npm test","postversion":"npm publish","postpublish":"git push origin --follow-tags"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","repository":{"type":"git","url":"git+https://github.com/npm/fs-minipass.git"},"bugs":{"url":"https://github.com/npm/fs-minipass/issues"},"description":"fs read and write streams based on minipass","dependencies":{"minipass":"^3.0.0"},"devDependencies":{"mutate-fs":"^2.0.1","tap":"^14.6.4"},"tap":{"check-coverage":true},"engines":{"node":">= 8"},"gitHead":"4995b5fd182fb95959ad5572dee5ccc2f31b5b21","_id":"fs-minipass@2.1.0","_nodeVersion":"13.4.0","_npmVersion":"6.13.6","dist":{"integrity":"sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==","shasum":"7f5036fdbf12c63c169190cbe4199c852271f9fb","tarball":"http://localhost:4260/fs-minipass/fs-minipass-2.1.0.tgz","fileCount":4,"unpackedSize":14089,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJzc8CRA9TVsSAnZWagAA394P/1iQTxpDUgo9PcXXEOf8\nzkw0nrrZ4dvg2FcBUePgJ6iDjY/e/p8wXBXBeCvaDVkULwjlMDMChv5aweS+\nS+hxZHpCe8f3QbTBlUGMQWgTrLrb3qXdHkBpv/uXuZD3eVzqJ8un/85aSc17\nnBJ6cTxbSft00ncApFRAh7fwZERBB8TWip+YSqjkv/5cSiiUwlRG/cCX3ogD\nMuqO083eOwdxonH/UgnGsI3Ijsdo0AqeEEjCYOCfFAnLtCdaDNC/7DqjnyrO\nwVAn0wuu0iAUXx3+3O/HgaAI6KR1qu16Zk9cB0vknd2SpxieqpV8vUNxfg8Y\n9fkdj5BkYenKsc5iqsdClYjnL533BEtd5+xu5/W8yXucQiiKedl06TGa39kj\nbXbXOY7C5LJiNe4BRQjVInBPhZytHQFl0StT9+A8SbCdFYjnZ6jFl4uKYVIe\nOHcjxfEx2gG40J5tRdL0YUM5L55ahgxS23l7hWL5sBOati7wWSP0IbnOa54i\n2qFnkek1tORJKneJ7g6p8XaZCNLY/5tV16Me+M0xJOxwhsNfJ+BvYode/B+/\nBm5uRXu/oW0k7WJ6s8n3GnzVCL8FiQdI7r7s74h745ftL5NXsVJo8d27kZEo\nIvumC4gilQ930J18VYtKlVEagVUOdXrU1zpAZ6tjCHmnMUB/VPE7FY4rFRXT\nHiAi\r\n=X3w7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIETjZE1EEDJqg6zfu44nfx6QmFlVznDQ3wnCJpEhn7eTAiAnIeoJR4uTnkUYIY8KLUi9riu9b41CCevmzEBz/hw71w=="}]},"directories":{},"_hasShrinkwrap":false},"3.0.3":{"name":"fs-minipass","version":"3.0.3","main":"lib/index.js","scripts":{"test":"tap","lint":"eslint \"**/*.js\"","postlint":"template-oss-check","template-oss-apply":"template-oss-apply --force","lintfix":"npm run lint -- --fix","snap":"tap","posttest":"npm run lint"},"author":{"name":"GitHub Inc."},"license":"ISC","repository":{"type":"git","url":"git+https://github.com/npm/fs-minipass.git"},"bugs":{"url":"https://github.com/npm/fs-minipass/issues"},"description":"fs read and write streams based on minipass","dependencies":{"minipass":"^7.0.3"},"devDependencies":{"@npmcli/eslint-config":"^4.0.1","@npmcli/template-oss":"4.18.0","mutate-fs":"^2.1.1","tap":"^16.3.2"},"tap":{"check-coverage":true,"nyc-arg":["--exclude","tap-snapshots/**"]},"engines":{"node":"^14.17.0 || ^16.13.0 || >=18.0.0"},"templateOSS":{"//@npmcli/template-oss":"This file is partially managed by @npmcli/template-oss. Edits may be overwritten.","version":"4.18.0","publish":"true"},"_id":"fs-minipass@3.0.3","gitHead":"8348d32797eadf1bad05fae1d8ba2af3da53cd44","_nodeVersion":"18.17.0","_npmVersion":"9.8.1","dist":{"integrity":"sha512-XUBA9XClHbnJWSfBzjkm6RvPsyg3sryZt06BEQoXcF7EK/xpGaQYJgQKDJSUH5SGZ76Y7pFx1QBnXz09rU5Fbw==","shasum":"79a85981c4dc120065e96f62086bf6f9dc26cc54","tarball":"http://localhost:4260/fs-minipass/fs-minipass-3.0.3.tgz","fileCount":4,"unpackedSize":14413,"attestations":{"url":"http://localhost:4260/attestations/fs-minipass@3.0.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD9zx1hl03IJIeWe9sdBFvux0IyXR6zf9Oguze7gejg5wIgTcY3Z3fPqn/3NAF6k5ixMQ1IssMYG446B4ZdiOMtTBA="}]},"directories":{},"_hasShrinkwrap":false}},"readme":"# fs-minipass\n\nFilesystem streams based on [minipass](http://npm.im/minipass).\n\n4 classes are exported:\n\n- ReadStream\n- ReadStreamSync\n- WriteStream\n- WriteStreamSync\n\nWhen using `ReadStreamSync`, all of the data is made available\nimmediately upon consuming the stream.  Nothing is buffered in memory\nwhen the stream is constructed.  If the stream is piped to a writer,\nthen it will synchronously `read()` and emit data into the writer as\nfast as the writer can consume it.  (That is, it will respect\nbackpressure.)  If you call `stream.read()` then it will read the\nentire file and return the contents.\n\nWhen using `WriteStreamSync`, every write is flushed to the file\nsynchronously.  If your writes all come in a single tick, then it'll\nwrite it all out in a single tick.  It's as synchronous as you are.\n\nThe async versions work much like their node builtin counterparts,\nwith the exception of introducing significantly less Stream machinery\noverhead.\n\n## USAGE\n\nIt's just streams, you pipe them or read() them or write() to them.\n\n```js\nconst fsm = require('fs-minipass')\nconst readStream = new fsm.ReadStream('file.txt')\nconst writeStream = new fsm.WriteStream('output.txt')\nwriteStream.write('some file header or whatever\\n')\nreadStream.pipe(writeStream)\n```\n\n## ReadStream(path, options)\n\nPath string is required, but somewhat irrelevant if an open file\ndescriptor is passed in as an option.\n\nOptions:\n\n- `fd` Pass in a numeric file descriptor, if the file is already open.\n- `readSize` The size of reads to do, defaults to 16MB\n- `size` The size of the file, if known.  Prevents zero-byte read()\n  call at the end.\n- `autoClose` Set to `false` to prevent the file descriptor from being\n  closed when the file is done being read.\n\n## WriteStream(path, options)\n\nPath string is required, but somewhat irrelevant if an open file\ndescriptor is passed in as an option.\n\nOptions:\n\n- `fd` Pass in a numeric file descriptor, if the file is already open.\n- `mode` The mode to create the file with. Defaults to `0o666`.\n- `start` The position in the file to start reading.  If not\n  specified, then the file will start writing at position zero, and be\n  truncated by default.\n- `autoClose` Set to `false` to prevent the file descriptor from being\n  closed when the stream is ended.\n- `flags` Flags to use when opening the file.  Irrelevant if `fd` is\n  passed in, since file won't be opened in that case.  Defaults to\n  `'a'` if a `pos` is specified, or `'w'` otherwise.\n","homepage":"https://github.com/npm/fs-minipass#readme","repository":{"type":"git","url":"git+https://github.com/npm/fs-minipass.git"},"author":{"name":"GitHub Inc."},"bugs":{"url":"https://github.com/npm/fs-minipass/issues"},"license":"ISC","readmeFilename":"README.md"}
